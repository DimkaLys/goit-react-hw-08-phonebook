{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactsSection/ContactsSection.js","components/ContactsListItem/ContactsListItem.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/ContactsForm/ContactsForm.js","components/ContactsFilter/ContactsFilter.js","Pages/ContactsPage/ContactsPage.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","ContactsSection","title","children","ContactsList","id","name","number","useDeleteContactMutation","deleteContact","type","onClick","onDelete","getFilter","state","filter","useGetContactsQuery","refetchOnFocus","data","error","isFetching","useSelector","contactsSelectors","filteredContacts","useMemo","normalizedFilter","contact","includes","toast","Loader","map","ContactsForm","useState","setName","setNumber","useAddContactMutation","addContact","handleChange","e","target","value","formSubmitHandler","item","normalizedName","find","el","warn","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","placeholder","required","onChange","ContactsFilter","dispatch","useDispatch","changeFilter","useCallback","filterContact","ContactsPage"],"mappings":"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","file":"static/js/3.753c0511.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default function ContactsSection({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import { useDeleteContactMutation } from \"redux/contacts/contactsSlice\";\n\nexport default function ContactsList({ id, name, number }) {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const onDelete = (id) => deleteContact(id);\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","export const getFilter = state => state.filter.filter;\n","import { useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport ContactsListItem from \"components/ContactsListItem/ContactsListItem\";\nimport { useGetContactsQuery } from \"redux/contacts/contactsSlice\";\nimport { contactsSelectors } from \"redux/contacts\";\nimport LoaderSpin from \"components/Loader/Loader\";\nimport { toast } from \"react-toastify\";\n\nexport default function ContactsList() {\n  const {\n    data = [],\n    error,\n    isFetching,\n  } = useGetContactsQuery(undefined, {\n    refetchOnFocus: true,\n  });\n\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return data.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, data]);\n\n  if (error) return toast.error(`There is an error: ${error}`);\n\n  return (\n    <>\n      {isFetching && <LoaderSpin />}\n\n      <ul>\n        {!isFetching &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactsListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n      {data.length === 0 && !isFetching && <h1>No contacts in phonebook!</h1>}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from \"redux/contacts/contactsSlice\";\nimport { toast } from \"react-toastify\";\n\nexport default function ContactsForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const { data = [] } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const formSubmitHandler = (item) => {\n    const normalizedName = item.name.toLowerCase();\n    data.find((el) => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? toast.warn(`${item.name} is already in contacts`)\n      : addContact(item);\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        placeholder=\"Please enter name\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        placeholder=\"Please enter number\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactsForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"redux/contacts/filterSlice\";\nimport { contactsSelectors } from \"redux/contacts\";\n\nexport default function ContactsFilter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    (e) => {\n      dispatch(filterContact(e.target.value));\n    },\n    [dispatch]\n  );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n","import ContactsSection from 'components/ContactsSection/ContactsSection';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactsFilter from 'components/ContactsFilter/ContactsFilter';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <ContactsSection title=\"Phonebook\">\n        <ContactsForm />\n      </ContactsSection>\n      <ContactsSection title=\"Contacts\">\n        <ContactsFilter />\n        <ContactsList />\n      </ContactsSection>\n    </>\n  );\n}\n"],"sourceRoot":""}